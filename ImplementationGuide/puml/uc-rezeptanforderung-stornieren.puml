@startuml

skinparam sequence {
    ArrowColor black
    ActorBorderColor black
    LifeLineBorderColor darkgray
    LifeLineBackgroundColor #ffffc0

    ParticipantBorderColor black
    ParticipantBackgroundColor #ffffc0
    ParticipantFontName Arial
    ParticipantFontSize 14
    ParticipantFontColor black

    ActorBackgroundColor #ffffc0
    ActorFontColor #303030
    ActorFontSize 14
    ActorFontName Arial

    BoxBorderColor gray
}

skinparam maxMessageSize 300
title Stornieren einer Rezeptanforderung durch Pflegeeinrichtung oder beauftragte Apotheke
hide footbox
autonumber

actor "Mitarbeiter Pflege \noder Apotheke" as MA #BUSINESS
participant "Primärsystem der \nPflegeeinrichtung oder AVS" as PS #BUSINESS
participant "KIM \nClientmodul" as Kim_cm #TECHNOLOGY
participant "KIM \nFachdienst" as Kim_fd #TECHNOLOGY

activate MA
MA -> PS: Stornierung auslösen()
deactivate MA

activate PS
PS -> MA++: Rezeptvorgang abfragen()
MA -> MA: Rezeptvorgang aus Liste möglicher Vorgänge auswählen()
MA -> MA: Begründung eingeben oder aus Liste möglicher Begründungen auswählen()
return :Vorgangs_ID, :Begründung

PS -> PS++: Empfängeradresse ermitteln(Vorgangs_ID)
return :gültige KIM-Adresse


PS -> PS++: Stornierung generieren(Vorgangs_ID, Begründung)
return :Stornierung



PS -> PS++: FHIR-Bundle "GEM_PR_ERP_MEDREQ_CancellationBundle" generieren(Stornierung)
return :GEM_PR_ERP_MEDREQ_CancellationBundle

PS -> PS++: Mail-MIME-Attachment generieren(GEM_PR_ERP_MEDREQ_CancellationBundle)
return :Mail-Attachment

PS -> PS++: Mail generieren(Mail-Attachment, gültige KIM-Adresse, X-KIM-Header-Information:=X-KIM-Dienstkennung="E-Rezept;Rezeptanforderung_Storno;V1.0")
return :KIM-Mail

PS -> Kim_cm++#TECHNOLOGY: KIM-Mail senden mit GEM_PR_ERP_MEDREQ_CancellationBundle als Payload(KIM-Mail)

group #LightYellow KIM Standardkommunikation
ref over Kim_cm, Kim_fd #lightyellow
    KIM-Mail senden
end ref

return :Status
end group



@enduml